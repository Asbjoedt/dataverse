---
name: Container Images Releasing

on:
    push:
        tags:
            - 'v[6-9].**'
        branches:
            - 'develop'
            # TODO: delete for final PR
            - '10478-version-base-img'
        # "Path filters are not evaluated for pushes of tags" https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
        paths:
            - 'modules/container-base/**'
            - 'modules/dataverse-parent/pom.xml'
            - '.github/workflows/container_base_push.yml'

env:
    PLATFORMS: linux/amd64,linux/arm64
    DEVELOPMENT_BRANCH: develop

jobs:
    build:
        name: Build image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: read
        # TODO: re-enable for final PR
        # Only run in upstream repo - avoid unnecessary runs in forks
        #if: ${{ github.repository_owner == 'IQSS' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Determine Java version from Parent POM
              run: |
                  echo "JAVA_VERSION=$(grep '<target.java.version>' modules/dataverse-parent/pom.xml | cut -f2 -d'>' | cut -f1 -d'<')" >> ${GITHUB_ENV}

            - name: Set up JDK ${{ env.JAVA_VERSION }}
              id: setup-java
              uses: actions/setup-java@v4
              with:
                  java-version: ${{ env.JAVA_VERSION }}
                  distribution: 'temurin'
                  cache: 'maven'
                  cache-dependency-path: |
                      modules/container-base/pom.xml
            - name: Download common cache on branch cache miss
              if: ${{ steps.setup-java.outputs.cache-hit != 'true' }}
              uses: actions/cache/restore@v4
              with:
                  key: dataverse-maven-cache
                  path: ~/.m2/repository

            # Note: Accessing, pushing tags etc. to DockerHub will only succeed in upstream and
            #       on events in context of upstream because secrets. PRs run in context of forks by default!
            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # In case this is a push to develop, we care about buildtime.
            # Configure a remote ARM64 build host in addition to the local AMD64 in two steps.
            # TODO: re-enable for final PR
            #- name: Setup SSH agent
            #  if: ${{ github.event_name != 'schedule' }}
            #  uses: webfactory/ssh-agent@v0.9.0
            #  with:
            #      ssh-private-key: ${{ secrets.BUILDER_ARM64_SSH_PRIVATE_KEY }}
            #- name: Provide the known hosts key and the builder config
            #  if: ${{ github.event_name != 'schedule' }}
            #  run: |
            #      echo "${{ secrets.BUILDER_ARM64_SSH_HOST_KEY }}" > ~/.ssh/known_hosts
            #      mkdir -p modules/container-base/target/buildx-state/buildx/instances
            #      cat > modules/container-base/target/buildx-state/buildx/instances/maven << EOF
            #      { "Name": "maven",
            #        "Driver": "docker-container",
            #        "Dynamic": false,
            #        "Nodes": [{"Name": "maven0",
            #                   "Endpoint": "unix:///var/run/docker.sock",
            #                   "Platforms": [{"os": "linux", "architecture": "amd64"}],
            #                   "DriverOpts": null,
            #                   "Flags": ["--allow-insecure-entitlement=network.host"],
            #                   "Files": null},
            #                  {"Name": "maven1",
            #                   "Endpoint": "ssh://${{ secrets.BUILDER_ARM64_SSH_CONNECTION }}",
            #                   "Platforms": [{"os": "linux", "architecture": "arm64"}],
            #                   "DriverOpts": null,
            #                   "Flags": ["--allow-insecure-entitlement=network.host"],
            #                   "Files": null}]}
            #      EOF

            - name: Calculate revision number for immutable tag
              run: |
                BASE_IMAGE="$( mvn help:evaluate -Pct -f modules/container-base -Dexpression=base.image -q -DforceStdout )"
                echo "REVISION_OPTION=-Dbase.image.revision=$( .github/workflows/scripts/get_next_revision.sh "${BASE_IMAGE}" )" | tee -a "${GITHUB_ENV}"
            - name: Configure update of "latest" tag for development branch
              if: ${{ github.ref_name == env.DEVELOPMENT_BRANCH }}
              run: |
                echo "DOCKER_TAGS=-Ddocker.imagePropertyConfiguration=override -Ddocker.tags.develop=latest" | tee -a "${GITHUB_ENV}"

            - name: Deploy multi-arch base container image to Docker Hub
              id: build
              run: mvn -f modules/container-base -Pct deploy -Ddocker.noCache ${DOCKER_TAGS} ${REVISION_OPTION} -Ddocker.platforms=${{ env.PLATFORMS }}

    #push-app-img:
    #    name: "Rebase & Publish App Image"
    #    permissions:
    #        contents: read
    #        packages: write
    #        pull-requests: write
    #    secrets: inherit
    #    needs:
    #        - discover
    #        - build
    #    uses: ./.github/workflows/container_app_push.yml
    #    with:
    #       branch: ${{ github.ref_name }}


  # TODO: job to update the docker hub description with supported tags and all
           #- if: ${{ github.event_name == 'push' && github.ref_name == env.DEVELOPMENT_BRANCH }}
           #  name: Push description to DockerHub
           #  uses: peter-evans/dockerhub-description@v3
           #  with:
           #    username: ${{ secrets.DOCKERHUB_USERNAME }}
           #    password: ${{ secrets.DOCKERHUB_TOKEN }}
           #    repository: gdcc/base
           #    short-description: "Dataverse Base Container image providing Payara application server and optimized configuration"
           #    readme-filepath: ./modules/container-base/README.md
